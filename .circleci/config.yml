version: 2

node_version:
  - &node_version
    working_directory: ~/simplecov-material
    docker:
      - image: circleci/node:latest

ruby_versions:
  - &ruby-2-6
    working_directory: ~/simplecov-material
    docker:
      - image: circleci/ruby:2.6.3
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

  - &ruby-2-5
    working_directory: ~/simplecov-material
    docker:
      - image: circleci/ruby:2.5.5
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

  - &ruby-2-4
    working_directory: ~/simplecov-material
    docker:
      - image: circleci/ruby:2.4.6
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

  - &ruby-2-3
    working_directory: ~/simplecov-material
    docker:
      - image: circleci/ruby:2.3.7
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

build_steps:
  - &install_yarn
    run:
      name: Update Yarn to Latest
      command: sudo npm install -g yarn

  - &yarn_restore_cache
    restore_cache:
      keys:
        - chris-pezza-yarn{{ checksum "yarn.lock" }}
        - chris-pezza-yarn

  - &yarn_install
    run:
      name: Yarn Install
      command: yarn install --frozen-lockfile

  - &yarn_save_cache
    save_cache:
      key: chris-pezza-yarn{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

  - &build_output
    run:
      name: Build Public files
      command: yarn build

  - &bundle_install
    run:
      name: Bundle Install
      command: bundle check || bundle install

  - &setup_code_climate
    run:
      name: Setup Code Climate test-reporter
      command: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter

  - &run_test_cc
    run:
      name: Run Tests
      command: |
        ./cc-test-reporter before-build
        bundle exec rake test
        ./cc-test-reporter after-build
      when: always

  - &run_test
    run:
      name: Run Tests
      command: bundle exec rake test
      when: always

  - &store_coverage
    # collect reports
    store_artifacts:
      path: coverage
      destination: coverage

  - &store_public
    # collect public
    store_artifacts:
      path: public
      destination: public

  - &store_test_results
    store_test_results:
      path: test/reports

jobs:
  build:
    <<: *node_version
    steps:
      - checkout
      - *install_yarn
      - *yarn_restore_cache
      - *yarn_install
      - *yarn_save_cache
      - *build_output
      - *store_public

  test-ruby-2-6:
    <<: *ruby-2-6
    steps:
      - checkout
      - *bundle_install
      - *run_test
      - *store_coverage
      - *store_test_results

  test-ruby-2-5:
    <<: *ruby-2-5
    steps:
      - checkout
      - *bundle_install
      - *run_test
      - *store_coverage
      - *store_test_results

  test-ruby-2-4:
    <<: *ruby-2-4
    steps:
      - checkout
      - *bundle_install
      - *run_test
      - *store_coverage
      - *store_test_results

  test-ruby-2-3:
    <<: *ruby-2-3
    steps:
      - checkout
      - *bundle_install
      - *run_test
      - *store_coverage
      - *store_test_results

  test:
    <<: *ruby-2-6
    steps:
      - checkout
      - *bundle_install
      - *setup_code_climate
      - *run_test_cc
      - *store_coverage
      - *store_test_results

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test-ruby-2-6:
          requires:
            - build
      - test-ruby-2-5:
          requires:
            - build
      - test-ruby-2-4:
          requires:
            - build
      - test-ruby-2-3:
          requires:
            - build
      - test:
          requires:
            - test-ruby-2-6
            - test-ruby-2-5
            - test-ruby-2-4
            - test-ruby-2-3
